<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>lazy_write</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="smt61.htm">&lt;</A>
 | <A href="smt63.htm">&gt;</A> | <A href="smt91.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="smt100.gif" ALT="SMT Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SMT</B><BR><FONT SIZE=2>Version 2.81
</TABLE>
<HR>
<A NAME="lazy_write">&nbsp;</A>
<H3><A NAME="TOC108"><TT>lazy_write</TT></A></H3>
<PRE>
#include "smtlib.h"
int
lazy_write (int handle, char *buffer, size_t count)
</PRE>
<H4>Synopsis</H4>
<P>Calls the standard write() function without blocking. Returns
   the number of bytes written when the call succeeds, else
   returns -1 and sets errno to the cause of the error. If the
   call would block, returns -1, sets errno to EAGAIN, and calls
   <A href="smt67.htm#recycle_module">recycle module</A>() to re-execute the current dialog module
   automatically. You can override this behavious by calling
   <A href="smt67.htm#recycle_module">recycle module</A> (FALSE) after the return. Sets the global
   variable "io_completed" to TRUE if the i/o access completed,
   with or without an error.
<H4>Source Code - (smtlib.c)</H4>
<PRE>
{
    int rc;

#if (defined (SMT_TRACE))
    trace ("lazy_write: handle=%d bytes=%d", handle, count);
#endif
    rc = write (handle, buffer, count);
    set_io_completed (rc);
    return (rc);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="smt61.htm">&lt;</A>
 | <A href="smt63.htm">&gt;</A> | <A href="smt91.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-99 iMatix Corporation</TABLE>
</BODY></HTML>
