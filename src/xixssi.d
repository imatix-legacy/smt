/*---------------------------------------------------------------------------*
 *  xixssi.d - LIBERO dialog data definitions for xixssi.c.                  *
 *  Generated by LIBERO 2.30 on  5 Dec, 1999, 14:17.                         *
 *  Schema file used: smtschm.c.                                             *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
#define _LR_NULL_STATE                  -1
#define terminate_event                 -1
#define command_event                   0
#define command_error_event             1
#define date_gmt_event                  2
#define date_local_event                3
#define doc_name_event                  4
#define doc_uri_event                   5
#define echo_event                      6
#define end_of_command_event            7
#define environ_event                   8
#define error_event                     9
#define exception_event                 10
#define exec_event                      11
#define executable_event                12
#define fatal_event                     13
#define file_event                      14
#define finished_event                  15
#define flastmod_event                  16
#define fsize_event                     17
#define include_event                   18
#define last_modified_event             19
#define master_event                    20
#define more_event                      21
#define no_command_event                22
#define ok_event                        23
#define query_string_event              24
#define redirect_event                  25
#define request_event                   26
#define shutdown_event                  27
#define time_out_event                  28
#define _LR_STATE_after_init            0
#define _LR_STATE_master_thread         1
#define _LR_STATE_after_get_command     2
#define _LR_STATE_wait_end_of_command   3
#define _LR_STATE_end_of_command        4
#define _LR_STATE_type_of_command       5
#define _LR_STATE_replace_variable_value 6
#define _LR_STATE_have_type_of_cgi      7
#define _LR_STATE_before_runnig_cgi     8
#define _LR_STATE_wait_for_cgi          9
#define _LR_STATE_after_get_include_command 10
#define _LR_STATE_wait_end_of_include_command 11
#define _LR_STATE_end_of_include_command 12
#define _LR_STATE_defaults              13
#define _LR_STATE_end_thread            14
#define _LR_defaults_state              13


/*- Function prototypes and macros ------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

MODULE initialise_the_thread        (THREAD *thread);
MODULE make_config_table            (THREAD *thread);
MODULE open_ssi_file                (THREAD *thread);
MODULE read_ssi_file                (THREAD *thread);
MODULE get_all_ssi_command          (THREAD *thread);
MODULE return_wsx_error             (THREAD *thread);
MODULE check_thread_type            (THREAD *thread);
MODULE get_command_type             (THREAD *thread);
MODULE get_file_name_from_uri       (THREAD *thread);
MODULE get_wsx_request              (THREAD *thread);
MODULE create_master_file_thread    (THREAD *thread);
MODULE execute_all_config_command   (THREAD *thread);
MODULE create_command_thread        (THREAD *thread);
MODULE set_time_out                 (THREAD *thread);
MODULE set_no_command_return_file   (THREAD *thread);
MODULE send_wsx_response            (THREAD *thread);
MODULE increment_command_end_count  (THREAD *thread);
MODULE check_if_all_command_complete (THREAD *thread);
MODULE signal_timeout               (THREAD *thread);
MODULE make_return_file             (THREAD *thread);
MODULE flush_time_out               (THREAD *thread);
MODULE get_variable_value           (THREAD *thread);
MODULE store_file_size_in_result    (THREAD *thread);
MODULE store_last_mod_date_in_result (THREAD *thread);
MODULE check_file_or_directory      (THREAD *thread);
MODULE store_document_name_in_result (THREAD *thread);
MODULE store_document_uri_in_result (THREAD *thread);
MODULE store_date_gmt_in_result     (THREAD *thread);
MODULE store_date_local_in_result   (THREAD *thread);
MODULE store_current_last_mod_date_in_result (THREAD *thread);
MODULE store_environ_value_in_result (THREAD *thread);
MODULE store_query_string_in_result (THREAD *thread);
MODULE check_if_cgi_protected       (THREAD *thread);
MODULE create_cgi_process           (THREAD *thread);
MODULE wait_process_end             (THREAD *thread);
MODULE close_child_process          (THREAD *thread);
MODULE store_cgi_output_in_result   (THREAD *thread);
MODULE store_ssi_error_in_result    (THREAD *thread);
MODULE set_no_command_include_file  (THREAD *thread);
MODULE make_include_return_file     (THREAD *thread);
MODULE free_all_resources           (THREAD *thread);
MODULE terminate_the_thread         (THREAD *thread);
MODULE signal_ssi_error             (THREAD *thread);
MODULE signal_end_of_command        (THREAD *thread);
MODULE free_include_resource        (THREAD *thread);

#define the_next_event              _the_next_event
#define the_exception_event         _the_exception_event
#define the_external_event          _the_external_event
#define exception_raised            _exception_raised
#define io_completed                _io_completed


/*- Static areas shared by all threads --------------------------------------*/

static word _LR_nextst [15][29] =
{
    { 5,0,0,0,0,0,0,0,0,14,0,0,0,0,2,0,0,0,10,0,1,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,3,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,14,0,0,0,0,0 },
    { 0,0,0,0,0,0,6,0,0,0,0,7,0,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,14,14,14,14,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,14,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,14,0,0,9 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,11,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,14,0,0,0,0,0 },
    { 0,14,0,0,0,0,0,0,0,14,14,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,14
     ,0
    },
    { 14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,14,0,14,0,0,0,0,0,0,0
     ,0
    }
};

static word _LR_action [15][29] =
{
    { 4,0,0,0,0,0,0,0,0,3,0,0,0,0,2,0,0,0,5,0,1,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,11,0,0,0,0,0 },
    { 0,0,0,0,0,0,12,0,0,0,0,15,0,0,0,0,14,13,0,0,0,0,0,0,0,0,0,0
     ,0
    },
    { 0,0,18,19,16,17,0,0,21,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,22,0,0
     ,0,0
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,27,0,0
     ,25
    },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,7,0,0,0,0,0 },
    { 0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29 },
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,30,0,0,0,0,0 },
    { 0,33,0,0,0,0,0,0,0,34,31,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,31
     ,0
    },
    { 36,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,37,0,35,0,0,0,0,0,0,0
     ,0
    }
};

static word _LR_offset [] =
{
    0,
    0,
    1,
    6,
    9,
    11,
    16,
    19,
    23,
    27,
    30,
    35,
    40,
    42,
    46,
    50,
    53,
    56,
    59,
    62,
    65,
    68,
    71,
    74,
    76,
    79,
    81,
    85,
    89,
    92,
    97,
    102,
    104,
    107,
    110,
    115,
    117,
    120
};

static word _LR_vector [] =
{
    _LR_STOP,
    0,1,2,3,_LR_STOP,
    4,5,_LR_STOP,
    6,_LR_STOP,
    7,1,2,3,_LR_STOP,
    8,9,_LR_STOP,
    10,11,12,_LR_STOP,
    13,14,5,_LR_STOP,
    15,16,_LR_STOP,
    17,18,14,5,_LR_STOP,
    19,18,14,5,_LR_STOP,
    20,_LR_STOP,
    7,21,5,_LR_STOP,
    7,22,5,_LR_STOP,
    7,23,_LR_STOP,
    24,5,_LR_STOP,
    25,5,_LR_STOP,
    26,5,_LR_STOP,
    27,5,_LR_STOP,
    28,5,_LR_STOP,
    29,5,_LR_STOP,
    30,5,_LR_STOP,
    31,_LR_STOP,
    32,33,_LR_STOP,
    33,_LR_STOP,
    34,35,5,_LR_STOP,
    34,36,5,_LR_STOP,
    37,5,_LR_STOP,
    17,38,14,5,_LR_STOP,
    19,18,38,5,_LR_STOP,
    5,_LR_STOP,
    39,40,_LR_STOP,
    36,5,_LR_STOP,
    36,41,4,5,_LR_STOP,
    40,_LR_STOP,
    42,40,_LR_STOP,
    42,43,40,_LR_STOP
};

static HOOK *_LR_module [44] = {
    make_config_table,
    open_ssi_file,
    read_ssi_file,
    get_all_ssi_command,
    return_wsx_error,
    check_thread_type,
    get_command_type,
    get_file_name_from_uri,
    get_wsx_request,
    create_master_file_thread,
    execute_all_config_command,
    create_command_thread,
    set_time_out,
    set_no_command_return_file,
    send_wsx_response,
    increment_command_end_count,
    check_if_all_command_complete,
    signal_timeout,
    make_return_file,
    flush_time_out,
    get_variable_value,
    store_file_size_in_result,
    store_last_mod_date_in_result,
    check_file_or_directory,
    store_document_name_in_result,
    store_document_uri_in_result,
    store_date_gmt_in_result,
    store_date_local_in_result,
    store_current_last_mod_date_in_result,
    store_environ_value_in_result,
    store_query_string_in_result,
    check_if_cgi_protected,
    create_cgi_process,
    wait_process_end,
    close_child_process,
    store_cgi_output_in_result,
    store_ssi_error_in_result,
    set_no_command_include_file,
    make_include_return_file,
    free_all_resources,
    terminate_the_thread,
    signal_ssi_error,
    signal_end_of_command,
    free_include_resource
};

#if (defined (DEBUG))
static char *_LR_mname [44] =
{
     "Make-Config-Table",
     "Open-Ssi-File",
     "Read-Ssi-File",
     "Get-All-Ssi-Command",
     "Return-Wsx-Error",
     "Check-Thread-Type",
     "Get-Command-Type",
     "Get-File-Name-From-Uri",
     "Get-Wsx-Request",
     "Create-Master-File-Thread",
     "Execute-All-Config-Command",
     "Create-Command-Thread",
     "Set-Time-Out",
     "Set-No-Command-Return-File",
     "Send-Wsx-Response",
     "Increment-Command-End-Count",
     "Check-If-All-Command-Complete",
     "Signal-Timeout",
     "Make-Return-File",
     "Flush-Time-Out",
     "Get-Variable-Value",
     "Store-File-Size-In-Result",
     "Store-Last-Mod-Date-In-Result",
     "Check-File-Or-Directory",
     "Store-Document-Name-In-Result",
     "Store-Document-Uri-In-Result",
     "Store-Date-Gmt-In-Result",
     "Store-Date-Local-In-Result",
     "Store-Current-Last-Mod-Date-In-Result",
     "Store-Environ-Value-In-Result",
     "Store-Query-String-In-Result",
     "Check-If-Cgi-Protected",
     "Create-Cgi-Process",
     "Wait-Process-End",
     "Close-Child-Process",
     "Store-Cgi-Output-In-Result",
     "Store-Ssi-Error-In-Result",
     "Set-No-Command-Include-File",
     "Make-Include-Return-File",
     "Free-All-Resources",
     "Terminate-The-Thread",
     "Signal-Ssi-Error",
     "Signal-End-Of-Command",
     "Free-Include-Resource"
};

static char *_LR_sname [15] =
{
     "After-Init",
     "Master-Thread",
     "After-Get-Command",
     "Wait-End-Of-Command",
     "End-Of-Command",
     "Type-Of-Command",
     "Replace-Variable-Value",
     "Have-Type-Of-Cgi",
     "Before-Runnig-Cgi",
     "Wait-For-Cgi",
     "After-Get-Include-Command",
     "Wait-End-Of-Include-Command",
     "End-Of-Include-Command",
     "Defaults",
     "End-Thread"
};

static char *_LR_ename [29] =
{
     "Command-Event",
     "Command-Error-Event",
     "Date-Gmt-Event",
     "Date-Local-Event",
     "Doc-Name-Event",
     "Doc-Uri-Event",
     "Echo-Event",
     "End-Of-Command-Event",
     "Environ-Event",
     "Error-Event",
     "Exception-Event",
     "Exec-Event",
     "Executable-Event",
     "Fatal-Event",
     "File-Event",
     "Finished-Event",
     "Flastmod-Event",
     "Fsize-Event",
     "Include-Event",
     "Last-Modified-Event",
     "Master-Event",
     "More-Event",
     "No-Command-Event",
     "Ok-Event",
     "Query-String-Event",
     "Redirect-Event",
     "Request-Event",
     "Shutdown-Event",
     "Time-Out-Event"
};
#else
static char *_LR_mname [44] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8",
     "9",
     "10",
     "11",
     "12",
     "13",
     "14",
     "15",
     "16",
     "17",
     "18",
     "19",
     "20",
     "21",
     "22",
     "23",
     "24",
     "25",
     "26",
     "27",
     "28",
     "29",
     "30",
     "31",
     "32",
     "33",
     "34",
     "35",
     "36",
     "37",
     "38",
     "39",
     "40",
     "41",
     "42",
     "43"
};

static char *_LR_sname [15] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8",
     "9",
     "10",
     "11",
     "12",
     "13",
     "14"
};

static char *_LR_ename [29] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8",
     "9",
     "10",
     "11",
     "12",
     "13",
     "14",
     "15",
     "16",
     "17",
     "18",
     "19",
     "20",
     "21",
     "22",
     "23",
     "24",
     "25",
     "26",
     "27",
     "28"
};
#endif
