/*---------------------------------------------------------------------------*
 *  xixxml.d - LIBERO dialog data definitions for xixxml.c.                  *
 *  Generated by LIBERO 2.30 on 16 Feb, 2000, 13:09.                         *
 *  Schema file used: smtschm.c.                                             *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
#define _LR_NULL_STATE                  -1
#define terminate_event                 -1
#define exception_event                 0
#define gsl_file_event                  1
#define not_found_event                 2
#define ok_event                        3
#define other_event                     4
#define request_event                   5
#define shutdown_event                  6
#define xml_file_event                  7
#define _LR_STATE_after_init            0
#define _LR_STATE_expect_request        1
#define _LR_STATE_have_request          2
#define _LR_STATE_defaults              3
#define _LR_defaults_state              3


/*- Function prototypes and macros ------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

MODULE initialise_the_thread        (THREAD *thread);
MODULE decode_wsx_request           (THREAD *thread);
MODULE load_xml_file                (THREAD *thread);
MODULE set_standard_attributes      (THREAD *thread);
MODULE process_xml_file             (THREAD *thread);
MODULE reply_wsx_with_output        (THREAD *thread);
MODULE free_xml_file                (THREAD *thread);
MODULE create_empty_xml_file        (THREAD *thread);
MODULE reply_illegal_access         (THREAD *thread);
MODULE reply_not_found              (THREAD *thread);
MODULE terminate_the_thread         (THREAD *thread);

#define the_next_event              _the_next_event
#define the_exception_event         _the_exception_event
#define the_external_event          _the_external_event
#define exception_raised            _exception_raised
#define io_completed                _io_completed


/*- Static areas shared by all threads --------------------------------------*/

static word _LR_nextst [4][8] =
{
    { 0,0,0,1,0,0,0,0 },
    { 0,0,0,0,0,2,0,0 },
    { 0,1,0,0,1,0,0,1 },
    { 1,0,1,0,0,0,3,0 }
};

static word _LR_action [4][8] =
{
    { 0,0,0,1,0,0,0,0 },
    { 0,0,0,0,0,2,0,0 },
    { 0,4,0,0,5,0,0,3 },
    { 1,0,6,0,0,0,7,0 }
};

static word _LR_offset [] =
{
    0,
    0,
    1,
    3,
    9,
    15,
    17,
    20
};

static word _LR_vector [] =
{
    _LR_STOP,
    0,_LR_STOP,
    1,2,3,4,5,_LR_STOP,
    6,2,3,4,5,_LR_STOP,
    7,_LR_STOP,
    8,5,_LR_STOP,
    9,_LR_STOP
};

static HOOK *_LR_module [10] = {
    decode_wsx_request,
    load_xml_file,
    set_standard_attributes,
    process_xml_file,
    reply_wsx_with_output,
    free_xml_file,
    create_empty_xml_file,
    reply_illegal_access,
    reply_not_found,
    terminate_the_thread
};

#if (defined (DEBUG))
static char *_LR_mname [10] =
{
     "Decode-Wsx-Request",
     "Load-Xml-File",
     "Set-Standard-Attributes",
     "Process-Xml-File",
     "Reply-Wsx-With-Output",
     "Free-Xml-File",
     "Create-Empty-Xml-File",
     "Reply-Illegal-Access",
     "Reply-Not-Found",
     "Terminate-The-Thread"
};

static char *_LR_sname [4] =
{
     "After-Init",
     "Expect-Request",
     "Have-Request",
     "Defaults"
};

static char *_LR_ename [8] =
{
     "Exception-Event",
     "Gsl-File-Event",
     "Not-Found-Event",
     "Ok-Event",
     "Other-Event",
     "Request-Event",
     "Shutdown-Event",
     "Xml-File-Event"
};
#else
static char *_LR_mname [10] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7",
     "8",
     "9"
};

static char *_LR_sname [4] =
{
     "0",
     "1",
     "2",
     "3"
};

static char *_LR_ename [8] =
{
     "0",
     "1",
     "2",
     "3",
     "4",
     "5",
     "6",
     "7"
};
#endif
