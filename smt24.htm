<HTML><HEAD><!--Revised: 1 Jan 1999 By: Pieter Hintjens-->
<TITLE>smt_exec_step</TITLE></HEAD>
<BODY BACKGROUND="newstone.gif">
<TABLE WIDTH=100%><TR><TD ALIGN=LEFT>
 | <A HREF="/index.htm"> iMatix home page</A><BR>
 | <A href="index.htm">&lt;&lt;</A> | <A href="smt23.htm">&lt;</A>
 | <A href="smt25.htm">&gt;</A> | <A href="smt91.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT>
<IMG SRC="smt100.gif" ALT="SMT Logo" WIDTH=80 HEIGHT=60 ALIGN=RIGHT HSPACE=10>
<FONT SIZE=5><B>SMT</B><BR><FONT SIZE=2>Version 2.81
</TABLE>
<HR>
<A NAME="smt_exec_step">&nbsp;</A>
<H3><A NAME="TOC70"><TT>smt_exec_step</TT></A></H3>
<PRE>
#include "smtlib.h"
Bool
smt_exec_step (void)
</PRE>
<H4>Synopsis</H4>
<P>Rebuilds the active list, delivering any events possible, then
   executes the first thread in the active list. Returns TRUE so
   long as there is something happening; returns FALSE when the
   application has 'halted'.
<H4>Source Code - (smtlib.c)</H4>
<PRE>
{
#if (defined (SMT_TRACE))
    trace ("smt_exec_step");
#endif
    deliver_events ();                  /*  Rebuild active thread list       */
    if (<A href="smt25.htm#smt_active">smt active</A> ())                  /*    and execute first thread       */
      {                                 /*    if any is active               */
        if (execute_thread (active_threads.right))
            /*  Fatal-error action for a thread is simple: destroy it        */
            <A href="smt51.htm#thread_destroy">thread destroy</A> (active_threads.right, FALSE);
        return (TRUE);
      }
    else
        return (FALSE);
}
</PRE>
<HR><TABLE WIDTH=100%><TR><TD ALIGN=LEFT WIDTH=60%>
 | <A href="index.htm">&lt;&lt;</A> | <A href="smt23.htm">&lt;</A>
 | <A href="smt25.htm">&gt;</A> | <A href="smt91.htm">&gt;&gt;</A>
<TD ALIGN=RIGHT NOWRAP>
<A HREF="/index.htm">
<IMG SRC="im0096c.gif" WIDTH=96 HEIGHT=36 ALT="iMatix" BORDER=0 ALIGN=RIGHT>
</A>
<FONT SIZE=2>Copyright &#169; 1996-99 iMatix Corporation</TABLE>
</BODY></HTML>
